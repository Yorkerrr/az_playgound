apiVersion: v1
kind: Pod
metadata:
  annotations:
    prometheus.io/path: /stats/prometheus
    prometheus.io/port: '15020'
    prometheus.io/scrape: 'true'
    sidecar.istio.io/status: >-
      {"version":"8e6e902b765af607513b28d284940ee1421e9a0d07698741693b2663c7161c11","initContainers":["istio-init"],"containers":["istio-proxy"],"volumes":["istio-envoy","istio-data","istio-podinfo","istio-token","istiod-ca-cert"],"imagePullSecrets":null}
  creationTimestamp: '2020-12-08T00:48:39Z'
  generateName: demo-67cdf8c4-
  labels:
    app: example
    istio.io/rev: default
    role: stable
    rollouts-pod-template-hash: 67cdf8c4
    security.istio.io/tlsMode: istio
    service.istio.io/canonical-name: example
    service.istio.io/canonical-revision: blue
    version: blue
  managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:generateName': {}
          'f:labels':
            .: {}
            'f:app': {}
            'f:role': {}
            'f:rollouts-pod-template-hash': {}
            'f:version': {}
          'f:ownerReferences':
            .: {}
            'k:{"uid":"96c4879d-9dd5-4ce6-b772-a88ae0f900d7"}':
              .: {}
              'f:apiVersion': {}
              'f:blockOwnerDeletion': {}
              'f:controller': {}
              'f:kind': {}
              'f:name': {}
              'f:uid': {}
        'f:spec':
          'f:containers':
            'k:{"name":"demo"}':
              .: {}
              'f:envFrom': {}
              'f:image': {}
              'f:imagePullPolicy': {}
              'f:name': {}
              'f:ports':
                .: {}
                'k:{"containerPort":8080,"protocol":"TCP"}':
                  .: {}
                  'f:containerPort': {}
                  'f:name': {}
                  'f:protocol': {}
              'f:resources':
                .: {}
                'f:limits':
                  .: {}
                  'f:cpu': {}
                  'f:memory': {}
                'f:requests':
                  .: {}
                  'f:cpu': {}
                  'f:memory': {}
              'f:terminationMessagePath': {}
              'f:terminationMessagePolicy': {}
          'f:dnsPolicy': {}
          'f:enableServiceLinks': {}
          'f:restartPolicy': {}
          'f:schedulerName': {}
          'f:securityContext': {}
          'f:terminationGracePeriodSeconds': {}
      manager: kube-controller-manager
      operation: Update
      time: '2020-12-08T00:48:39Z'
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        'f:status':
          'f:conditions':
            'k:{"type":"ContainersReady"}':
              .: {}
              'f:lastProbeTime': {}
              'f:lastTransitionTime': {}
              'f:status': {}
              'f:type': {}
            'k:{"type":"Initialized"}':
              .: {}
              'f:lastProbeTime': {}
              'f:lastTransitionTime': {}
              'f:status': {}
              'f:type': {}
            'k:{"type":"Ready"}':
              .: {}
              'f:lastProbeTime': {}
              'f:lastTransitionTime': {}
              'f:status': {}
              'f:type': {}
          'f:containerStatuses': {}
          'f:hostIP': {}
          'f:initContainerStatuses': {}
          'f:phase': {}
          'f:podIP': {}
          'f:podIPs':
            .: {}
            'k:{"ip":"172.20.1.55"}':
              .: {}
              'f:ip': {}
          'f:startTime': {}
      manager: kubelet
      operation: Update
      time: '2020-12-08T00:48:53Z'
  name: demo-67cdf8c4-2s2kx
  namespace: canary
  ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: demo-67cdf8c4
      uid: 96c4879d-9dd5-4ce6-b772-a88ae0f900d7
  resourceVersion: '27053'
  selfLink: /api/v1/namespaces/canary/pods/demo-67cdf8c4-2s2kx
  uid: 64b633bb-cbe1-4133-acae-73d3bca98401
spec:
  containers:
    - envFrom:
        - configMapRef:
            name: stable-h9g54c586f
      image: 'argoproj/rollouts-demo:orange'
      imagePullPolicy: Always
      name: demo
      ports:
        - containerPort: 8080
          name: web
          protocol: TCP
      resources:
        limits:
          cpu: 140m
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: default-token-2nw4z
          readOnly: true
    - args:
        - proxy
        - sidecar
        - '--domain'
        - $(POD_NAMESPACE).svc.cluster.local
        - '--serviceCluster'
        - example.$(POD_NAMESPACE)
        - '--proxyLogLevel=warning'
        - '--proxyComponentLogLevel=misc:error'
        - '--trust-domain=cluster.local'
        - '--concurrency'
        - '2'
      env:
        - name: JWT_POLICY
          value: third-party-jwt
        - name: PILOT_CERT_PROVIDER
          value: istiod
        - name: CA_ADDR
          value: 'istiod.istio-system.svc:15012'
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.serviceAccountName
        - name: HOST_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: CANONICAL_SERVICE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: 'metadata.labels[''service.istio.io/canonical-name'']'
        - name: CANONICAL_REVISION
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: 'metadata.labels[''service.istio.io/canonical-revision'']'
        - name: PROXY_CONFIG
          value: |
            {"proxyMetadata":{"DNS_AGENT":""}}
        - name: ISTIO_META_POD_PORTS
          value: |-
            [
                {"name":"web","containerPort":8080,"protocol":"TCP"}
            ]
        - name: ISTIO_META_APP_CONTAINERS
          value: demo
        - name: ISTIO_META_CLUSTER_ID
          value: Kubernetes
        - name: ISTIO_META_INTERCEPTION_MODE
          value: REDIRECT
        - name: ISTIO_META_WORKLOAD_NAME
          value: demo-67cdf8c4
        - name: ISTIO_META_OWNER
          value: >-
            kubernetes://apis/apps/v1/namespaces/canary/deployments/demo-67cdf8c4
        - name: ISTIO_META_MESH_ID
          value: cluster.local
        - name: DNS_AGENT
        - name: ISTIO_KUBE_APP_PROBERS
          value: '{}'
      image: 'docker.io/istio/proxyv2:1.7.3'
      imagePullPolicy: Always
      name: istio-proxy
      ports:
        - containerPort: 15090
          name: http-envoy-prom
          protocol: TCP
      readinessProbe:
        failureThreshold: 30
        httpGet:
          path: /healthz/ready
          port: 15021
          scheme: HTTP
        initialDelaySeconds: 1
        periodSeconds: 2
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: '2'
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1337
        runAsNonRoot: true
        runAsUser: 1337
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/istio
          name: istiod-ca-cert
        - mountPath: /var/lib/istio/data
          name: istio-data
        - mountPath: /etc/istio/proxy
          name: istio-envoy
        - mountPath: /var/run/secrets/tokens
          name: istio-token
        - mountPath: /etc/istio/pod
          name: istio-podinfo
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: default-token-2nw4z
          readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  initContainers:
    - args:
        - istio-iptables
        - '-p'
        - '15001'
        - '-z'
        - '15006'
        - '-u'
        - '1337'
        - '-m'
        - REDIRECT
        - '-i'
        - '*'
        - '-x'
        - ''
        - '-b'
        - '*'
        - '-d'
        - '15090,15021,15020'
      env:
        - name: DNS_AGENT
      image: 'docker.io/istio/proxyv2:1.7.3'
      imagePullPolicy: Always
      name: istio-init
      resources:
        limits:
          cpu: '2'
          memory: 1Gi
        requests:
          cpu: 10m
          memory: 10Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
            - NET_ADMIN
            - NET_RAW
          drop:
            - ALL
        privileged: false
        readOnlyRootFilesystem: false
        runAsGroup: 0
        runAsNonRoot: false
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: default-token-2nw4z
          readOnly: true
  nodeName: aks-agentpool-91602207-vmss000001
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 1337
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  volumes:
    - name: default-token-2nw4z
      secret:
        defaultMode: 420
        secretName: default-token-2nw4z
    - emptyDir:
        medium: Memory
      name: istio-envoy
    - emptyDir: {}
      name: istio-data
    - downwardAPI:
        defaultMode: 420
        items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.labels
            path: labels
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.annotations
            path: annotations
      name: istio-podinfo
    - name: istio-token
      projected:
        defaultMode: 420
        sources:
          - serviceAccountToken:
              audience: istio-ca
              expirationSeconds: 43200
              path: istio-token
    - configMap:
        defaultMode: 420
        name: istio-ca-root-cert
      name: istiod-ca-cert
status:
  conditions:
    - lastProbeTime: null
      lastTransitionTime: '2020-12-08T00:48:44Z'
      status: 'True'
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: '2020-12-08T00:48:53Z'
      status: 'True'
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: '2020-12-08T00:48:53Z'
      status: 'True'
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: '2020-12-08T00:48:39Z'
      status: 'True'
      type: PodScheduled
  containerStatuses:
    - containerID: >-
        docker://e4d135f06dd3b15fc9bf43ac23dbc34d347f4a3d05c0588dfa0d5eaf4759af16
      image: 'argoproj/rollouts-demo:orange'
      imageID: >-
        docker-pullable://argoproj/rollouts-demo@sha256:03d93c7f9aa4b89cde476cd16c5e46c3fca2551c98e5845cfff63b0d14e0ab5a
      lastState: {}
      name: demo
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: '2020-12-08T00:48:47Z'
    - containerID: >-
        docker://cb690d59b807355316f4265c55c4a4b56c47b8624cd04590c062ff82fd4a21c7
      image: 'istio/proxyv2:1.7.3'
      imageID: >-
        docker-pullable://istio/proxyv2@sha256:6169d096fe60f128f1311f76c97ee1c3e5d760a45042d5c9182492745d34c658
      lastState: {}
      name: istio-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: '2020-12-08T00:48:50Z'
  hostIP: 172.20.1.35
  initContainerStatuses:
    - containerID: >-
        docker://8362e0c197803ce0864c6739e1755f4e0dd688cde24d93747886b646c0006605
      image: 'istio/proxyv2:1.7.3'
      imageID: >-
        docker-pullable://istio/proxyv2@sha256:6169d096fe60f128f1311f76c97ee1c3e5d760a45042d5c9182492745d34c658
      lastState: {}
      name: istio-init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: >-
            docker://8362e0c197803ce0864c6739e1755f4e0dd688cde24d93747886b646c0006605
          exitCode: 0
          finishedAt: '2020-12-08T00:48:44Z'
          reason: Completed
          startedAt: '2020-12-08T00:48:44Z'
  phase: Running
  podIP: 172.20.1.55
  podIPs:
    - ip: 172.20.1.55
  qosClass: Burstable
  startTime: '2020-12-08T00:48:39Z'
